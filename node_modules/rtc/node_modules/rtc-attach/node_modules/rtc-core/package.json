{
  "name": "rtc-core",
  "description": "Core definitions and functions for the rtc.io suite",
  "version": "4.0.0",
  "dependencies": {
    "detect-browser": "^1.0.0"
  },
  "devDependencies": {
    "freeice": "^2.1.0",
    "peerpair": "^1.0.0",
    "tape": "^2",
    "testling": "^1.7.0"
  },
  "scripts": {
    "gendocs": "gendocs > README.md",
    "test": "testling -x ./.travis/start-$BROWSER.sh"
  },
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rtc-io/rtc-core.git"
  },
  "keywords": [
    "webrtc"
  ],
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/rtc-io/rtc-core/issues"
  },
  "homepage": "https://github.com/rtc-io/rtc-core",
  "testling": {
    "files": "test/all.js"
  },
  "contributors": [
    {
      "name": "Damon Oehlman",
      "email": "damon.oehlman@nicta.com.au",
      "url": "https://github.com/DamonOehlman"
    },
    {
      "name": "Silvia Pfeiffer",
      "email": "silvia.pfeiffer@nicta.com.au",
      "url": "https://github.com/silviapfeiffer"
    }
  ],
  "readme": "# rtc-core\n\nThe rtc-core package includes a number of core types and constants that\nare used across the rtc.io suite.\n\n\n[![NPM](https://nodei.co/npm/rtc-core.png)](https://nodei.co/npm/rtc-core/)\n\n[![Build Status](https://img.shields.io/travis/rtc-io/rtc-core.svg?branch=master)](https://travis-ci.org/rtc-io/rtc-core) [![unstable](https://img.shields.io/badge/stability-unstable-yellowgreen.svg)](https://github.com/dominictarr/stability#unstable) \n\n### `rtc-core/detect`\n\nA browser detection helper for accessing prefix-free versions of the various\nWebRTC types.\n\n### Example Usage\n\nIf you wanted to get the native `RTCPeerConnection` prototype in any browser\nyou could do the following:\n\n```js\nvar detect = require('rtc-core/detect'); // also available in rtc/detect\nvar RTCPeerConnection = detect('RTCPeerConnection');\n```\n\nThis would provide whatever the browser prefixed version of the\nRTCPeerConnection is available (`webkitRTCPeerConnection`,\n`mozRTCPeerConnection`, etc).\n\n### `rtc-core/genice`\n\nRespond appropriately to options that are passed to packages like\n`rtc-quickconnect` and trigger a `callback` (error first) with iceServer\nvalues.\n\nThe function looks for either of the following keys in the options, in\nthe following order or precedence:\n\n1. `ice` - this can either be an array of ice server values or a generator\n   function (in the same format as this function).  If this key contains a\n   value then any servers specified in the `iceServers` key (2) will be\n   ignored.\n\n2. `iceServers` - an array of ice server values.\n\n### `rtc-core/reset`\n\nThis is a simple, cross-browser method for resetting a media element\nback to a initial state after having media attached.\n\n### `rtc-core/wait-connected`\n\n`waitConnected(pc, callback)`\n\nA simple helper function that will monitor `iceconnectionstatechange` events\nand wait until a connected `iceConnectionState` has been triggered (either\n`connected` or `completed`).  Once this state has been achieved the event\nlistener will be removed and a callback fired.\n\n## License(s)\n\n### Apache 2.0\n\nCopyright 2013 - 2014 National ICT Australia Limited (NICTA)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "rtc-core@4.0.0",
  "dist": {
    "shasum": "3dbec97fc16fff90c1a81918a130811440251e3b"
  },
  "_from": "rtc-core@^4.0.0",
  "_resolved": "https://registry.npmjs.org/rtc-core/-/rtc-core-4.0.0.tgz"
}
