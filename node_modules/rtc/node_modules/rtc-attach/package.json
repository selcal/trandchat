{
  "name": "rtc-attach",
  "version": "2.0.1",
  "description": "Attach a media stream to an existing or new media element (basically attachMediaStream with support for rtc.io plugins)",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "gendocs": "gendocs > README.md"
  },
  "stability": "unstable",
  "repository": {
    "type": "git",
    "url": "https://github.com/rtc-io/rtc-attach.git"
  },
  "keywords": [
    "webrtc",
    "media-capture",
    "getusermedia",
    "rtc.io"
  ],
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@nicta.com.au"
  },
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/rtc-io/rtc-attach/issues"
  },
  "homepage": "https://github.com/rtc-io/rtc-attach",
  "dependencies": {
    "cog": "^1.0.0",
    "rtc-core": "^4.0.0"
  },
  "devDependencies": {
    "crel": "^2.1.5",
    "kgo": "^1.2.0",
    "rtc-capture": "^1.0.1",
    "rtc-plugin-nicta-ios": "^1.1.2",
    "rtc-plugin-temasys": "^1.1.0"
  },
  "readme": "# rtc-attach\n\nRoughly equivalent to the\n[`attachMediaStream`](https://www.npmjs.org/package/attachmediastream)\npackage but with support for rtc.io plugins.  Also uses an error first\nasync API to allow plugins time to initialize.\n\n\n[![NPM](https://nodei.co/npm/rtc-attach.png)](https://nodei.co/npm/rtc-attach/)\n\n[![unstable](https://img.shields.io/badge/stability-unstable-yellowgreen.svg)](https://github.com/dominictarr/stability#unstable) \n[![rtc.io google group](http://img.shields.io/badge/discuss-rtc.io-blue.svg)](https://groups.google.com/forum/#!forum/rtc-io)\n\n\n\n## Example Usage\n\n```js\nvar capture = require('rtc-capture');\nvar attach = require('rtc-attach');\n\ncapture({ video: true, audio: true }, function(err, stream) {\n  if (err) {\n    return console.error('could not capture stream: ', stream);\n  }\n\n  attach.local(stream, function(err, el) {\n    if (err) {\n      return console.error('could not attach stream to element: ', err);\n    }\n\n    document.body.appendChild(el);\n  });\n});\n\n```\n\n## Example using Plugins\n\n```js\nvar capture = require('rtc-capture');\nvar attach = require('rtc-attach');\nvar opts = {\n  plugins: [\n    require('rtc-plugin-nicta-ios'),\n    require('rtc-plugin-temasys')\n  ]\n};\n\ncapture({ audio: true, video: true }, opts, function(err, stream) {\n  if (err) {\n    return console.error('could not capture stream: ', err);\n  }\n\n  attach.local(stream, opts, function(err, el) {\n    if (err) {\n      return console.error('could not attach stream: ', err);\n    }\n\n    document.body.appendChild(el);\n  });\n});\n\n```\n\n## Reference\n\n### `attach(stream, opts?, callback)`\n\nAttach `stream` to a HTML element that will render the content. The provided\n`callback` follows the format of `fn(err, element)`.  While the async nature\nof this package may seem odd, because a plugin may need time to initialize\nthis caters for this case in addition to standard usage in the browser.\n\n- `autoplay` (default: `true`) - by default after the stream has been\n  attached to the element it will be played.  This is done by calling\n  the `play()` function on the element rather than relying on `autoplay`\n  attribute functionality.\n\n- `el` (default: `null`) - if you with to supply an element to be used\n  instead of creating a new element to receive the stream specify it here.\n\n- `muted` (default: `false`) - whether the created element should be muted\n  or not.  For local streams this should almost always, be true so consider\n  using the `attach.local` helper function for simple cases.\n\n- `plugins` (default: `[]`) - specify one or more plugins that can be used\n  to render the media stream appropriate to the current platform in the\n  event that WebRTC and/or media capture is supported via a browser plugin.\n\n### `attach.local(stream, opts?, callback)`\n\nAttach a local stream with options appropriate for local streams:\n\n- `muted`: `true`\n\n## License(s)\n\n### Apache 2.0\n\nCopyright 2014 National ICT Australia Limited (NICTA)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "rtc-attach@2.0.1",
  "dist": {
    "shasum": "38766d1dc70a8f67219649bcf48decf9127e14f3"
  },
  "_from": "rtc-attach@^2.0.1",
  "_resolved": "https://registry.npmjs.org/rtc-attach/-/rtc-attach-2.0.1.tgz"
}
