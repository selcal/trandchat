{
  "name": "rtc-capture",
  "version": "1.0.2",
  "description": "Cross browser getUserMedia implementation with support for rtc.io plugins",
  "main": "index.js",
  "scripts": {
    "test": "testling -x ./.travis/start-$BROWSER.sh",
    "gendocs": "gendocs > README.md"
  },
  "stability": "unstable",
  "repository": {
    "type": "git",
    "url": "https://github.com/rtc-io/rtc-capture.git"
  },
  "keywords": [
    "webrtc",
    "mediacapture",
    "getusermedia"
  ],
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@nicta.com.au"
  },
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/rtc-io/rtc-capture/issues"
  },
  "homepage": "https://github.com/rtc-io/rtc-capture",
  "testling": {
    "files": "test/all.js"
  },
  "dependencies": {
    "rtc-core": "^4.0.0"
  },
  "devDependencies": {
    "cog": "^1.0.0",
    "rtc-plugin-nicta-ios": "^1.3.4",
    "rtc-plugin-temasys": "^1.1.0",
    "tape": "^3.0.0",
    "testling": "^1.7.1"
  },
  "readme": "# rtc-capture\n\nRoughly equivalent to the\n[`getUserMedia`](https://www.npmjs.org/package/getusermedia) package but with\nsupport for rtc.io plugins.\n\n\n[![NPM](https://nodei.co/npm/rtc-capture.png)](https://nodei.co/npm/rtc-capture/)\n\n[![Build Status](https://img.shields.io/travis/rtc-io/rtc-capture.svg?branch=master)](https://travis-ci.org/rtc-io/rtc-capture) [![unstable](https://img.shields.io/badge/stability-unstable-yellowgreen.svg)](https://github.com/dominictarr/stability#unstable) \n[![Gitter chat](https://badges.gitter.im/rtc-io/discuss.png)](https://gitter.im/rtc-io/discuss)\n\n\n\n## Example Usage\n\n```js\nvar capture = require('rtc-capture');\n\ncapture({ audio: true, video: true }, function(err, stream) {\n  if (err) {\n    return console.error('could not capture stream: ', err);\n  }\n\n  console.log('captured stream: ', stream);\n});\n\n```\n\n## Example with using Plugins\n\n```js\nvar capture = require('rtc-capture');\nvar opts = {\n  plugins: [\n    require('rtc-plugin-nicta-ios'),\n    require('rtc-plugin-temasys')\n  ]\n};\n\ncapture({ audio: true, video: true }, opts, function(err, stream) {\n  if (err) {\n    return console.error('could not capture stream: ', err);\n  }\n\n  console.log('captured stream: ', stream);\n});\n\n```\n\n## Reference\n\n### `capture(constraints, opts?, callback)`\n\nCapture media with the supplied `constraints`.  If an `opts` argument is\nsupplied look for plugins that may change the behaviour of the capture\noperation.\n\n## License(s)\n\n### Apache 2.0\n\nCopyright 2014 National ICT Australia Limited (NICTA)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "rtc-capture@1.0.2",
  "dist": {
    "shasum": "027cfa2d2cc7707a8d9baeae46022f41a562479e"
  },
  "_from": "rtc-capture@^1.0.1",
  "_resolved": "https://registry.npmjs.org/rtc-capture/-/rtc-capture-1.0.2.tgz"
}
