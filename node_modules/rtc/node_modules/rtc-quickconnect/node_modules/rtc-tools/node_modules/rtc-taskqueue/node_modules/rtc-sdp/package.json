{
  "name": "rtc-sdp",
  "version": "1.1.0",
  "description": "rtc.io utility module for patching (munging) SDP",
  "main": "index.js",
  "scripts": {
    "test": "node test/all.js",
    "gendocs": "gendocs > README.md"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rtc-io/rtc-sdp.git"
  },
  "keywords": [
    "webrtc",
    "rtc.io",
    "sdp",
    "munge"
  ],
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@nicta.com.au"
  },
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/rtc-io/rtc-sdp/issues"
  },
  "homepage": "https://github.com/rtc-io/rtc-sdp",
  "devDependencies": {
    "rtc-quickconnect": "^4.1.0",
    "tape": "^3.0.3"
  },
  "dependencies": {
    "whisk": "^1.0.0"
  },
  "readme": "# rtc-sdp\n\nThis is a utility module for intepreting and patching sdp.\n\n\n[![NPM](https://nodei.co/npm/rtc-sdp.png)](https://nodei.co/npm/rtc-sdp/)\n\n[![Build Status](https://img.shields.io/travis/rtc-io/rtc-sdp.svg?branch=master)](https://travis-ci.org/rtc-io/rtc-sdp) [![unstable](https://img.shields.io/badge/stability-unstable-yellowgreen.svg)](https://github.com/dominictarr/stability#unstable) \n\n## Usage\n\nThe `rtc-sdp` main module exposes a single function that is capable of\nparsing lines of SDP, and providing an object allowing you to perform\noperations on those parsed lines:\n\n```js\nvar sdp = require('rtc-sdp')(lines);\n```\n\nThe currently supported operations are listed below:\n\n### `sdp.addIceCandidate(data)`\n\nModify the sdp to include candidates as denoted by the data.\n\n### `sdp.getMediaTypes() => []`\n\nRetrieve the list of media types that have been defined in the sdp via\n`m=` lines.\n\n### `sdp.toString()`\n\nConvert the SDP structure that is currently retained in memory, into a string\nthat can be provided to a `setLocalDescription` (or `setRemoteDescription`)\nWebRTC call.\n\n## SDP Filtering / Munging Functions\n\nThere are additional functions included in the module to assign with\nperforming \"single-shot\" SDP filtering (or munging) operations:\n\n### `rtc-sdp/constrain-bandwidth`\n\n```\nfn(value, mediaType?) => fn(sdp) => sdp`\n```\n\nCreate a filter function that can apply a `b=AS` line to the supplied SDP.\n\n```js\nvar constrainBandwidth = require('rtc-sdp/constrain-bandwidth');\nvar quickconnect = require('rtc-quickconnect');\n\n// create a conference with constrained bandwidth\nvar conference = quickconnect('https://switchboard.rtc.io', {\n  room: 'sdpfilter-test',\n  sdpfilter: constrainBandwidth(128)\n});\n\nconference.on('call:started', function(id) {\n  console.log('call started with peer: ' + id);\n});\n\n```\n\nThe above example modifies the SDP at the session level.  In cases where you\nneed to apply a bandwidth constraint for a specific media type, you will need\nto specify the mediaType as part of the function call:\n\n```js\nvar constrainBandwidth = require('rtc-sdp/constrain-bandwidth');\nvar quickconnect = require('rtc-quickconnect');\n\n// create a conference with constrained bandwidth\nvar conference = quickconnect('https://switchboard.rtc.io', {\n  room: 'sdpfilter-test',\n  sdpfilter: constrainBandwidth(128, 'video')\n});\n\nconference.on('call:started', function(id) {\n  console.log('call started with peer: ' + id);\n});\n\n```\n\n## License(s)\n\n### Apache 2.0\n\nCopyright 2015 National ICT Australia Limited (NICTA)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "rtc-sdp@1.1.0",
  "dist": {
    "shasum": "5763f03ce43d869feb1c4027617d5498212cdc73"
  },
  "_from": "rtc-sdp@^1.1.0",
  "_resolved": "https://registry.npmjs.org/rtc-sdp/-/rtc-sdp-1.1.0.tgz"
}
